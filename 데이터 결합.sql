USE PRACTICE;

/*INNER JOIN */

SELECT *
	FROM CUSTOMER AS A
    INNER 
    JOIN SALES AS B
    ON A.MEM_NO = B.MEM_NO;
    
/* MEM_NO 기준으로 1:N 관계*/
SELECT *
	FROM CUSTOMER AS A
    INNER
    JOIN SALES AS B
	ON A.MEM_NO = B.MEM_NO
    WHERE A.MEM_NO = '1000970';
    
/* LEFT JOIN: 두 테이블의 공통 값이 매칭되는 데이터만 결합 + 매칭되지 않는 데이터는 NULL */
SELECT *
FROM CUSTOMER AS A
LEFT
JOIN SALES AS B
ON A.MEM_NO = B.MEM_NO;
/* NULL 값은 회원은 생성 되었지만 주문을 하지 않았을 경우*/

/* RIGHT JOIN */
SELECT *
FROM CUSTOMER A
RIGHT
JOIN SALES B
ON A.MEM_NO = B.MEM_NO
WHERE A.MEM_NO IS NULL;
/*NULL값은 비회원 주문*/

/* 임시테이블 생성*/
CREATE TEMPORARY TABLE CUSTOMER_SALES_INNER_JOIN
SELECT A.*
	   ,B.ORDER_NO
FROM CUSTOMER A
INNER
JOIN  SALES AS B
ON A.MEM_NO = B.MEM_NO;

/* 임시테이블 조회*/
SELECT * FROM CUSTOMER_SALES_INNER_JOIN;

/* 성별 필터링*/
SELECT *
FROM CUSTOMER_SALES_INNER_JOIN
WHERE GENDER='MAN';

/* 지역별 구매횟수 필터링*/
SELECT ADDR, COUNT(ORDER_NO) AS 구매횟수
FROM CUSTOMER_SALES_INNER_JOIN
WHERE GENDER='MAN'
GROUP BY ADDR;

/*100회 미만 주문 지역*/
SELECT ADDR, COUNT(ORDER_NO) AS 구매횟수
FROM CUSTOMER_SALES_INNER_JOIN
WHERE GENDER='MAN'
GROUP BY ADDR
HAVING COUNT(ORDER_NO) <100;

/* 3개 이상 테이블 결합 */
SELECT *
FROM SALES AS S
LEFT
JOIN CUSTOMER AS B
ON S.MEM_NO = B.MEM_NO
left
JOIN PRODUCT P
ON P.PRODUCT_CODE = S.PRODUCT_CODE;